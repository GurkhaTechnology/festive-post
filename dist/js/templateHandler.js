let templates=[];async function loadTemplates(e){try{const t=await fetch("templates/templates.json");templates=await t.json(),e(templates)}catch(e){console.error("Error loading templates:",e)}}function displayCategories(e,t,a){["all",...new Set(e.map(e=>e.category))].forEach(e=>{const s=document.createElement("button");s.textContent=e.charAt(0).toUpperCase()+e.slice(1),s.classList.add("category-btn"),"all"===e&&s.classList.add("active"),s.addEventListener("click",()=>{document.querySelectorAll(".category-btn").forEach(e=>e.classList.remove("active")),s.classList.add("active"),a(e)}),t.appendChild(s)})}function displayTemplates(e,t,a="",s,l){s.innerHTML="";let c="all"===t?e:e.filter(e=>e.category===t);a&&(c=c.filter(e=>e.name.toLowerCase().includes(a.toLowerCase())));const r=new IntersectionObserver((e,t)=>{e.forEach(e=>{if(e.isIntersecting){const a=e.target;a.src=a.dataset.src,t.unobserve(a)}})});c.forEach(e=>{const t=document.createElement("img");t.dataset.src=e.thumbnail,t.alt=e.name,r.observe(t);const a=document.createElement("div");a.classList.add("template-item"),a.setAttribute("role","option"),a.setAttribute("tabindex","0"),a.appendChild(t),a.addEventListener("click",()=>{l(e.path),document.querySelectorAll(".template-item").forEach(e=>{e.classList.remove("selected"),e.setAttribute("aria-selected","false")}),a.classList.add("selected"),a.setAttribute("aria-selected","true")}),a.addEventListener("keydown",e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),a.click())}),s.appendChild(a)})}export{loadTemplates,displayCategories,displayTemplates};